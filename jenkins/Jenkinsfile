pipeline {
    agent any

    environment {
        SERVER_IP = 'server ip'
    }

    tools {
        nodejs 'node16'
    }

    stages {

        stage('Set parameter') {
            steps {
                script {
                    withAWS(region: 'ap-northeast-2', credentials: 'JenkinsUser'){
                        env.SERVER_IP = sh(script: "aws ssm get-parameters --name /front/SERVER_IP | jq -j '.Parameters[0].Value'", returnStdout: true)
                    }
                }
            }
            post {
                success {
                    slackSend (channel: 'frontch', color: '#00FF20', message: "get parameter finished - '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                }
                failure {
                    slackSend (channel: 'frontch', color: '#FF0040', message: "get parameter failed - '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                }
            }
        }

        stage('Build'){
            steps {
                sh 'git clean -fdx'
                sh 'yarn install --network-timeout 6000000 --production'
                sh 'CI=false yarn build'
            }
            post {
                success {
                    slackSend (channel: 'frontch', color: '#00FF20', message: "npm build ended successfully - '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                }
                failure {
                    slackSend (channel: 'frontch', color: '#FF0040', message: "npm build failed - '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                }
            }
        }
        stage('Deploy React') {
            steps {
                withAWS(region: 'ap-northeast-2', credentials: 'JenkinsUser') {
                    sh 'aws s3 sync ./build s3://anfrontends3'
                }

            }
            post {
                success {
                    slackSend (channel: 'frontch', color: '#00FF20', message: "Deploy ended successfully - '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                }
                failure {
                    slackSend (channel: 'frontch', color: '#FF0040', message: "Deploy failed - '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                }
            }
        }
    }
}